version: '3.8'
services:
  api-pagamento:
    container_name: api-pagamento
    build:
        context: api-pagamento
        dockerfile: Dockerfile
    image: api-pagamento:latest
    ports:
        - 8081:8081
    environment:
          - POSTGRESQL_URL=db
          - POSTGRESQL_PORT=5432
          - POSTGRESQL_DATABASE=postgres
          - POSTGRESQL_USER=postgres
          - POSTGRESQL_PASSWORD=postgres
          - SERVER_PORT=8081
          - KAFKA_HOST=kafka
          - KAFKA_PORT=9092
    networks:
        - spring-cloud-network
  api-emprestimo:
    container_name: api-emprestimo
    build:
        context: api-emprestimo
        dockerfile: Dockerfile
    image: api-emprestimo:latest
    ports:
        - 8080:8080
    environment:
          - POSTGRESQL_URL=db
          - POSTGRESQL_PORT=5432
          - POSTGRESQL_DATABASE=postgres
          - POSTGRESQL_USER=postgres
          - POSTGRESQL_PASSWORD=postgres
          - SERVER_PORT=8080
          - KAFKA_HOST=kafka
          - KAFKA_PORT=9092
    networks:
        - spring-cloud-network
  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
        - spring-cloud-network
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - spring-cloud-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - spring-cloud-network
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - spring-cloud-network
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

volumes:
  postgres-data:
networks:
    spring-cloud-network:
        driver: bridge